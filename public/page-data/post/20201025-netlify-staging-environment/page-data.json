{"componentChunkName":"component---src-templates-post-tsx","path":"/post/20201025-netlify-staging-environment/","result":{"pageContext":{"post":{"node":{"title":"Netlifyでステージング環境を用意する","image":{"file":{"url":"//images.ctfassets.net/t8kgtqnqij4r/4ocfV6ZLl0fsQjgtmMTqfZ/f342d3106aea5edcdf29c6eeef5d1400/PR____________________________________________________________1_.png"}},"body":{"childMarkdownRemark":{"html":"<h2>ステージング環境を作ろうと思った経緯</h2>\n<p>昨日、記念すべき（？）<a href=\"https://gntk.dev/post/20201023-my-first-post\">初投稿の記事</a>を公開しましたが、公開後に早速問題発覚しました。\n公開した記事をiPhoneで表示確認したところ、サイト上のテキストがすべて（ゴシック体になる想定だったが）明朝体になってしまっていました。（スクショ撮っておけばよかった…次から気をつける）</p>\n<p>一応PC/SP両方で見れるように画面を作っており、Chromeのデベロッパーツールで表示確認などもしていました。デベロッパーツール上ではPCもSPもゴシック体で表示されていたためヨシ！で公開してしまいましたが、iPhoneの実機だと明朝体になってしまっていました。\n想定外のフォントが表示されてしまった原因は、すべてのテキストに全く<code class=\"language-text\">font-family</code>を設定していなかったことです（当然）。<code class=\"language-text\">font-family</code>を指定しなかった場合、フォントはブラウザに任せるかんじになってしまうので、公開前に検証をしたmacOSのChromeだとゴシック体で表示されて、公開後に検証したiOSのChromeやSafariだと（おそらくヒラギノ）明朝で表示されたということですね。</p>\n<p>公開してからじゃないと検証できない事項があるのダメだな…と思いしばらく悩んだのですが、「ステージング環境用意すればいいやん」と気付けました。ふだんから本業で散々やってることなのになぜすぐ思いつかなかったのか…。</p>\n<h2>Netlifyでステージング環境を用意する</h2>\n<p>NetlifyとGithubとを連携させると、Githubリポジトリのmasterブランチにpushもしくは他ブランチをmergeしたタイミングで変更が自動的にビルド・デプロイされます。\nNetlifyでは、master以外のブランチを別の環境にデプロイすることもできます。\nNetlifyのSite overviewから<code class=\"language-text\">Site settings &gt; Build &amp; deploy &gt; Continuous Deployment &gt; Deploy contexts</code>から、master以外にデプロイしたいブランチを設定することができます。\n<img src=\"//images.ctfassets.net/t8kgtqnqij4r/6J1SRotKAoLqteHVGsK3ZO/b816659514ac237e3dd182f631cbbe1b/____________________________2020-10-25_17.39.51.png\" alt=\"20201025_Netlify設定画面\">\nこの設定は、新たに<code class=\"language-text\">dev</code>ブランチをデプロイするようにする設定です。</p>\n<h2>修正→PR作成→実機で確認</h2>\n<h3>1. font-familyが設定されていない件を修正する</h3>\n<p>Reactコンポーネントに下記のスタイルをあてます。</p>\n<div class=\"gatsby-highlight\" data-language=\"css\"><pre class=\"language-css\"><code class=\"language-css\">  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> -apple-system<span class=\"token punctuation\">,</span> BlinkMacSystemFont<span class=\"token punctuation\">,</span> <span class=\"token string\">'Hiragino Kaku Gothic ProN'</span><span class=\"token punctuation\">,</span> Meiryo<span class=\"token punctuation\">,</span> sans-serif<span class=\"token punctuation\">;</span></code></pre></div>\n<h3>2. 変更をdevブランチにmergeする</h3>\n<p>業務で慣れていることもあり、一人開発ではありますがGit flowでブランチ運用しています。上記の修正は<code class=\"language-text\">feature/xxxxxx</code>みたいなブランチでPRを作り、<code class=\"language-text\">dev</code>にマージします。</p>\n<p>変更が<code class=\"language-text\">dev</code>にマージされたら、<code class=\"language-text\">dev</code>を<code class=\"language-text\">master</code>にマージするPRを作ります。すると、GithubのPRの画面に下記のようにビルド・デプロイの進捗が表示されます。（merge→PR closeしてしまってから記事を書いているので、また画像がない…；；参考サイトから引用しています）\n<img src=\"//images.ctfassets.net/t8kgtqnqij4r/6x5dm5tgRqqqf5hhR4xpQv/9cf17aef41843d4beed195d3861319ee/netlify-deploy-contexts-05.png\" alt=\"20201025_Netlifyのビルド・デプロイ進捗\">\n画像の赤矢印のリンクを踏むと、<code class=\"language-text\">dev</code>をビルド・デプロイしたステージング環境にアクセスできます。</p>\n<h3>3. 実機で確認する</h3>\n<p><a href=\"https://chrome.google.com/webstore/detail/the-qr-code-extension/oijdcdmnjjgnnhgljmhkjlablaejfeeb?hl=ja\">Chromeの拡張</a>でQRコード表示してiPhoneからステージング環境にアクセスするなどすれば、確認できます。\n<img src=\"//images.ctfassets.net/t8kgtqnqij4r/3nq6MpppxRv5XVIMYVL75/cf40bc1519cb692ac7b24ca065cb2041/unnamed.png\" alt=\"20201025_iPhoneのスクショ\">\nめでたしめでたし。</p>\n<h2>[余談]アイキャッチ画像作成が楽勝だった話</h2>\n<p>前回のポストに「サムネイル用意するのめんどくさい…」と書きましたが、<a href=\"https://www.canva.com/\">Canva</a>っていうサービス使ったら楽勝でした。素材もたくさんあるし文字も簡単に入れられるし、最高やんけ！</p>\n<h2>参考</h2>\n<p><a href=\"https://microcms.io/blog/netlify-deploy-contexts/\">https://microcms.io/blog/netlify-deploy-contexts/</a></p>"}},"updatedAt":"2020年10月25日","description":{"description":"実機での表示確認など、ローカル環境では確認できない検証があるときはステージング環境が必要になります。NetlifyとGithubを連携させれば、PRを作るごとに自動でステージング環境が用意できます。"},"slug":"20201025-netlify-staging-environment"}}}},"staticQueryHashes":[]}